{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["doubleFlip","im","mode","canvas","OffscreenCanvas","width","height","canvasContext","getContext","drawImage","setTransform","convertToBlob","App","props","imgRefM1","useRef","imgRefM2","imgRefOrig","useState","pictures","setPictures","downloadHidden","setDlHidden","download","ref","window","open","current","currentSrc","className","onClick","withIcon","onChange","picture","containerM1","containerM2","containerOrig","img","Image","src","URL","createObjectURL","length","onload","promises","Promise","all","then","b","console","log","label","buttonText","imgExtension","maxFileSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c9f705e.chunk.js","sourcesContent":["import React, {useRef, useState, useEffect} from \"react\";\nimport ImageUploader from \"react-images-upload\";\nimport './App.css'\n\nconst doubleFlip = (im, mode) => {\n  let canvas = new OffscreenCanvas(im.width, im.height);\n  let canvasContext = canvas.getContext('2d')\n  switch(mode){\n    case 0:\n      canvasContext.drawImage(im, 0, 0, im.width/2, im.height, 0, 0, im.width/2, im.height);\n      canvasContext.setTransform(-1,0,0,1,canvas.width,0);\n      canvasContext.drawImage(im, 0, 0, im.width/2, im.height, 0, 0, im.width/2, im.height);\n      break;\n    case 1:\n      canvasContext.setTransform(1,0,0,1,canvas.width/2,0);\n      canvasContext.drawImage(im, im.width/2, 0, im.width/2, im.height, 0, 0, im.width/2, im.height);\n      canvasContext.setTransform(-1,0,0,1,im.width/2,0);\n      canvasContext.drawImage(im, im.width/2, 0, im.width/2, im.height, 0, 0, im.width/2, im.height);\n      break;\n    case 2:\n      canvasContext.drawImage(im, 0, 0, im.width, im.height);\n      break;\n  }\n  return canvas.convertToBlob()\n}\n\n\n\n\nconst App = props => {\n  \n  const imgRefM1 = useRef(null)\n  const imgRefM2 = useRef(null)\n  const imgRefOrig = useRef(null)\n\n  const [pictures, setPictures] = useState([]);\n  const [downloadHidden, setDlHidden] = useState(true);\n\n  const download = ref => {window.open(ref.current.currentSrc)}\n\n\n\n  const onDrop = picture => {\n\n    setPictures([])\n    setPictures([...pictures, picture]);\n\n    let containerM1 = imgRefM1.current\n    let containerM2 = imgRefM2.current\n    let containerOrig = imgRefOrig.current\n\n    let img = new Image();\n    img.src = URL.createObjectURL(picture[picture.length - 1])\n    img.onload = () => {\n      let promises = [doubleFlip(img, 0), doubleFlip(img, 1), doubleFlip(img, 2)]\n      Promise.all(promises).then((b) => {\n        containerM1.src = URL.createObjectURL(b[0]);\n        containerM2.src = URL.createObjectURL(b[1]);\n        containerOrig.src = URL.createObjectURL(b[2]);\n        setDlHidden(false)\n      })\n    }\n    console.log(imgRefM1);\n  };\n\n  return (\n    <>\n    <div className=\"header\">\n      <h1>DoubleFlip</h1>\n    </div>\n    <div className=\"App\">\n      <div className=\"gallery\">\n        <div>\n          <img ref={imgRefM1} className=\"image-container\"></img>\n          { !downloadHidden &&\n            <button onClick={() => download(imgRefM1)}>Download Image</button>\n          }\n        </div>\n        <div>\n          <img ref={imgRefOrig} className=\"image-container\"></img>\n        </div>\n        <div>\n          <img ref={imgRefM2} className=\"image-container\"></img>\n          { !downloadHidden &&\n            <button onClick={() => download(imgRefM2)}>Download Image</button>\n          }\n        </div>\n      </div>\n      <ImageUploader\n          {...props}\n          withIcon={true}\n          onChange={onDrop}\n          label=\"Select an Image to DoubleFlip\"\n          buttonText=\"Open\"\n          imgExtension={[\".jpg\",\".jpeg\",\".gif\", \".png\", \".gif\"]}\n          maxFileSize={5242880}\n          className=\"upload-box\"\n        />\n    </div>\n    </>\n  );\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}